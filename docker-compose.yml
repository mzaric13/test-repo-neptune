services:
  postgres-db:
    container_name: postgres-db
    build:
      context: .
      dockerfile: Dockerfile  # Specify your Dockerfile
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: planet9
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./check-schema.sh:/check-schema.sh  # Ensure this path is correct
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "chmod +x /check-schema.sh && /bin/sh /check-schema.sh || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    # healthcheck:
    #   test: ["CMD-SHELL", "psql -U postgres -W postgres -d planet9 -c '\\dn' | grep -q 'planet9'"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5
    networks:
      - local_net

  # second-instance-db:
  #   container_name: second-instance-db
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.second  # Specify your Dockerfile
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #     POSTGRES_DB: planet9
  #   volumes:
  #     - second-instance-db-data:/var/lib/postgresql/data
  #     - ./init.sql:/docker-entrypoint-initdb.d/init.sql  
  #     - ./check-schema-second.sh:/check-schema-second.sh  
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD-SHELL", "psql -U postgres -W postgres -d planet9 -c '\\dn' | grep -q 'planet9'"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   networks:
  #     - local_net

  # first-instance-db:
  #   image: postgres:14.2-alpine
  #   container_name: first-instance-db
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #     POSTGRES_DB: planet9
  #   volumes:
  #     - first-instance-db-data:/var/lib/postgresql/data
  #     - ./init.sql:/docker-entrypoint-initdb.d/init.sql
  #     - ./check-schema-first.sh:/check-schema-first.sh
  #   restart: always
  #   healthcheck:
  #     test: ["CMD", "/check-schema-first.sh"] 
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   networks:
  #     - local_net

  # second-instance-db:
  #   image: postgres:14.2-alpine
  #   container_name: second-instance-db
  #   ports:
  #     - 5432:5432
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #     POSTGRES_DB: planet9
  #   volumes:
  #     - second-instance-db-data:/var/lib/postgresql/data
  #     - ./init.sql:/docker-entrypoint-initdb.d/init.sql
  #     - ./check-schema-second.sh:/check-schema-second.sh
  #   restart: always
  #   healthcheck:
  #     test: ["CMD", "/check-schema-second.sh"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   networks:
  #     - local_net

  neptune-first-instance:
    image: neptunesoftware/planet9:v23.10.7
    container_name: neptune-first-instance
    environment:
      DB_TYPE: postgresql
      DB_PSQL_HOST: postgres-db
      DB_PSQL_PORT: 5432
      DB_PSQL_USER: postgres
      DB_PSQL_PASSWORD: postgres
      DB_PSQL_DBNAME: first-database
      PORT: 9101
    depends_on:
      # - first-instance-db
      postgres-db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 1.5G
    networks:
      - local_net

  neptune-second-instance:
    image: neptunesoftware/planet9:v23.10.7
    container_name: neptune-second-instance
    environment:
      DB_TYPE: postgresql
      DB_PSQL_HOST: postgres-db
      DB_PSQL_PORT: 5432
      DB_PSQL_USER: postgres
      DB_PSQL_PASSWORD: postgres
      DB_PSQL_DBNAME: second-database
      PORT: 9100
    depends_on:
      # - second-instance-db
      postgres-db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 1.5G
    networks:
      - local_net

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt/live/smart-watering.xyz/fullchain.pem:/etc/ssl/certs/fullchain.pem
      - /etc/letsencrypt/live/smart-watering.xyz/privkey.pem:/etc/ssl/private/privkey.pem
      - /etc/letsencrypt/live/second.smart-watering.xyz/fullchain.pem:/etc/ssl/certs/second/fullchain.pem
      - /etc/letsencrypt/live/second.smart-watering.xyz/privkey.pem:/etc/ssl/private/second/privkey.pem
    depends_on:
      - postgres-db
      # - second-instance-db
      - neptune-first-instance
      - neptune-second-instance
    networks:
      - local_net
    restart: unless-stopped
    command: ["nginx", "-g", "daemon off;"]

volumes:
  # second-instance-db-data: {}
  # first-instance-db-data: {}
  postgres-data: {}

networks:
  local_net:
    driver: bridge